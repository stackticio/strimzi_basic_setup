apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-cleanup-sa
  namespace: mongodb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: job-cleanup-role
  namespace: mongodb
rules:
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-cleanup-rolebinding
  namespace: mongodb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: job-cleanup-role
subjects:
  - kind: ServiceAccount
    name: job-cleanup-sa
    namespace: mongodb
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: job-cleanup-cronjob
  namespace: mongodb
spec:
  schedule: "*/4 * * * *"  # runs every 4 minutes
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: job-cleanup-sa
          restartPolicy: Never
          containers:
            - name: delete-completed-jobs
              image: bitnami/kubectl:latest
              command:
                - /bin/sh
                - -c
                - |
                  echo "Looking for completed jobs in mongodb..."
                  # List only jobs that have succeeded at least once
                  kubectl get jobs -n mongodb -o jsonpath='{range .items[?(@.status.succeeded==1)]}{.metadata.name}{"\n"}{end}' > /tmp/completed_jobs.txt

                  if [ -s /tmp/completed_jobs.txt ]; then
                    echo "Deleting these completed jobs:"
                    cat /tmp/completed_jobs.txt
                    xargs -r -n 1 kubectl delete job -n mongodb < /tmp/completed_jobs.txt
                  else
                    echo "No completed jobs found."
                  fi

